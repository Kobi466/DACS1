package service;

import dto.CustomerDTO;
import dto.MessageDTO;
import repositoy_dao.CustomerDAO;
import repositoy_dao.MessageDAO;
import session.ChatHistoryRequest;

import java.util.ArrayList;
import java.util.List;

public class MessageService {
    public List<MessageDTO> getChatHistory(ChatHistoryRequest chatRequest) {
        // T√¨m customerId n·∫øu thi·∫øu
        String customer = chatRequest.getCustomer();
        if (customer == null || customer.isBlank()) {
            System.err.println("‚ö†Ô∏è Customer kh√¥ng h·ª£p l·ªá!");
            return new ArrayList<>();
        }
        return MessageDAO.getMessages(chatRequest.getCustomer(), chatRequest.getStaff());
    }

    public List<CustomerDTO> getCustomersWithMessages() {
        // L·∫•y danh s√°ch kh√°ch h√†ng ƒë√£ c√≥ tin nh·∫Øn
        return MessageDAO.getCustomersWithMessages();
    }

    public boolean saveMessage(MessageDTO message) {
        // Check and initialize customerId if it's null or invalid
        if (message.getCustomerId() == null || message.getCustomerId() <= 0) {
            System.out.println("üü° Debug: customerId ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p ho·∫∑c kh√¥ng h·ª£p l·ªá, t√¨m customerId d·ª±a tr√™n receiver...");

            if (message.getReceiver() == null || message.getReceiver().isBlank()) {
                System.err.println("‚ùå L·ªói: Receiver kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng ƒë∆∞·ª£c cung c·∫•p.");
                return false; // Cannot proceed without a valid receiver
            }

            // Try to find customerId using receiver's username
            int resolvedCustomerId = CustomerDAO.getInstance().findCustomerIdByUsername(message.getReceiver());
            if (resolvedCustomerId <= 0) {
                System.err.println("‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y customerId t∆∞∆°ng ·ª©ng v·ªõi receiver '" + message.getReceiver() + "'.");
                return false; // Invalid customerId, abort saving
            }

            message.setCustomerId(resolvedCustomerId); // Update the customerId in the message
        }

        // Save message to DB through DAO
        return MessageDAO.insertMessage(message);
    }
    public List<MessageDTO> getCustomersWithLastMessages() {
        // L·∫•y danh s√°ch kh√°ch h√†ng k√®m tin nh·∫Øn g·∫ßn nh·∫•t
        return MessageDAO.getCustomersWithLastMessage();
    }
}
